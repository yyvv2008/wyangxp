-- MySQL dump 10.13  Distrib 5.7.19, for Linux (x86_64)
--
-- Host: localhost    Database: wyangxp
-- ------------------------------------------------------
-- Server version	5.7.19-debug

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `admin`
--

DROP TABLE IF EXISTS `admin`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `admin` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(255) NOT NULL COMMENT '名称',
  `auth_key` varchar(32) NOT NULL COMMENT '认证',
  `password_hash` varchar(255) NOT NULL COMMENT '密码',
  `email` varchar(255) NOT NULL COMMENT '邮箱',
  `avatar` varchar(255) DEFAULT NULL COMMENT '头像',
  `status` int(11) NOT NULL DEFAULT '10' COMMENT '状态',
  `created_at` int(11) NOT NULL COMMENT '创建时间',
  `updated_at` int(11) NOT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `username_UNIQUE` (`username`),
  UNIQUE KEY `email_UNIQUE` (`email`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COMMENT='管理';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `admin`
--

LOCK TABLES `admin` WRITE;
/*!40000 ALTER TABLE `admin` DISABLE KEYS */;
INSERT INTO `admin` VALUES (1,'wyang','UjZvcS2VX6tpMLB9-SfbN3w9ncTqmuhm','$2y$13$ZoYZWjSiJzNMxZtd6grLTudrOm4ysAdCTRXFppE.Ang7kXNs3obCe','591012658@qq.com',NULL,10,1504664227,1504664227);
/*!40000 ALTER TABLE `admin` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `learning`
--

DROP TABLE IF EXISTS `learning`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `learning` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(60) NOT NULL COMMENT '标题',
  `uid` int(11) NOT NULL COMMENT '作者',
  `cid` int(11) NOT NULL COMMENT '分类',
  `cover` varchar(255) DEFAULT '' COMMENT '封面',
  `content` text NOT NULL COMMENT '内容',
  `remend` int(11) NOT NULL DEFAULT '0' COMMENT '推荐',
  `status` int(11) NOT NULL DEFAULT '1' COMMENT '状态',
  `created_at` int(11) NOT NULL COMMENT '创建时间',
  `updated_at` int(11) NOT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `learning`
--

LOCK TABLES `learning` WRITE;
/*!40000 ALTER TABLE `learning` DISABLE KEYS */;
INSERT INTO `learning` VALUES (1,'PHP',1,4,'/uploads/cover/59c1c4a64ffe9_php-logo.svg','~~~php \r\n    echo \'hello world\';\r\n~~~ \r\n',0,1,1504861817,1505883928),(2,'PHP7.0后，curl 上传文件',1,4,NULL,'~~~php \r\n$url = \'localhost/upload.php\';\r\n\r\n$file = realpath(\'./test.txt\');\r\n\r\n$post_datas = [\r\n    \'title\' => \'picture\',\r\n    \'img\' => new \\CURLFile($file),\r\n];\r\n\r\n$ch = curl_init();\r\n\r\n$options = [\r\n    CURLOPT_URL => $url,\r\n    CURLOPT_RETURNTRANSFER => 1,\r\n    CURLOPT_POST => 1,\r\n    CURLOPT_POSTFIELDS => $post_datas,\r\n    CURLOPT_TIMEOUT => 30,\r\n];\r\ncurl_setopt_array($ch, $options);\r\n\r\n$res = curl_exec($ch);\r\n$error = curl_error($ch);\r\n\r\ncurl_close($ch);\r\n~~~  \r\n\r\nwin环境不支持多线程，要在linux下测试，妈蛋！妈蛋！妈蛋！',0,1,1505095745,1505895739),(3,'Git 使用笔记',1,100,NULL,'别名设置：\r\n~~~git \r\n    git config --global alias.st status\r\n    git config --global alias.br branch\r\n    git config --global alias.ci commit\r\n    git config --global alias.co checkout\r\n~~~  \r\n- - -\r\n重设URL：\r\n~~~git \r\n    git remote set-url origin URL\r\n~~~  \r\n- - -\r\n日志查看：\r\n~~~php\r\n    git log --pretty=\"%h-%an, %ar:%s\"\r\n    ## 显示如下：\r\n    $ git log --pretty=\"%h-%an, %ar:%s\"\r\n    2f53086-wyang, 3 hours ago:\'pjax + ueditor + markdown\'\r\n    91e7f18-wyang, 19 hours ago:\'update\'\r\n    ca0bfc8-wyang, 23 hours ago:\'update\'\r\n    c944795-wyang, 2 days ago:\'add markdown\'\r\n    7be4314-wyang, 2 days ago:Merge remote-tracking branch \'origin/master\'\r\n\r\n    ## 查看全部版本号\r\n    git reflog\r\n~~~\r\n- - -\r\n取消add过的内容文件：\r\n~~~php \r\n    git reset HEAD -- test.php\r\n~~~  \r\n- - -\r\n版本回退：\r\n~~~git \r\n    git reset --hard HEAD (^/^^/~100)\r\n    git reset --hard 版本号\r\n~~~  \r\n- - -\r\n撤消合并：\r\n~~~git \r\n    git reset --merge\r\n~~~  \r\n- - -\r\n标签：\r\n~~~git \r\n    ## 给某个提交打标签\r\n    git tag **tagName** commitId\r\n    ## 查看所有标签\r\n    git tag\r\n~~~  \r\n- - -\r\n 指定本地分支dev与远程分支origin/dev链接：\r\n~~~git \r\n    git branch --set-upstream dev origin/dev\r\n~~~  \r\n- - -\r\n重新提交：\r\n~~~git \r\n    git commit --amend\r\n~~~  \r\n- - -\r\n查看工作区：\r\n~~~git \r\n    git stash list\r\n    ## 隐藏当前工作区\r\n    git stash\r\n    ## 恢复并删除stash内容  =>  恢复  +  删除\r\n    git stash pop  =>  git stash apply  +  git stash drop\r\n~~~  \r\n- - -\r\n~~~git \r\n    # 执行命令将db.php加入不提交队列\r\n    git update-index --assume-unchanged include/db.php\r\n    # 执行命令将db.php取消加入不提交队列\r\n    git update-index --no-assume-unchanged include/db.php\r\n~~~  ',0,1,1505896065,1505897152),(4,'OSI七层协议',1,100,NULL,'### OSI七层协议： ###\r\n    应用层－－> 定义应用程序传送数据的接口\r\n    表现层－－> 编码数据包\r\n    会谈层－－> 建立网络联机的确认\r\n    传送层－－> 确认封包协议（TCP、UDP）\r\n    网络层－－> 确认封包数据路由（IP）\r\n    链结层－－> 将数据包转换成MAC格式（Media Access Control） \r\n    {\r\n        IEEE 802.3 的标准 CSMA/CD (Carrier Sense Multiple Access with Collision Detection)\r\n        MAC 其实就是我们上面一直讲到的讯框 (frame)[CSMA/CD()传送出去的讯框数据] 啰！\r\n        只是这个讯框上面有两个很重要的数据，就是目标与来源的网卡卡号，因此我们又简称网卡卡号为 MAC 而已只是这个讯框上面有两个很重要的数据，就是目标与来源的网卡卡号，因此我们又简称网卡卡号为 MAC 而已\r\n    }\r\n    物理层－－> 以帧的方式发送MAC格式的数据包\r\n### TCP/IP: ###\r\n![asdfsdf](http://wyxp_admin/images/TCP&IP.png \"enter image title here\")\r\n\r\n摘自：[鸟哥的Linux私房菜](http://cn.linux.vbird.org/linux_server/0110network_basic.php)',0,1,1505898260,1505910046),(5,'mysql 学习笔记',1,9,NULL,'常见错误：\r\n>  `SET GLOBAL sql_mode=(SELECT REPLACE(@@sql_mode,\'ONLY_FULL_GROUP_BY\',\'\'));`\r\n\r\n默认值为：ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,\r\nERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION\r\n- - -\r\n\r\n~~~mysql \r\n  ## 设置环境变量：\r\n  select @@global.socket;\r\n  show variables like \'socket\';\r\n  ## 设置最大连接时间\r\n  SET GLOBAL max_connections = 1000;\r\n  SET @@global.max_connections = 1000;\r\n  备份：mysqldump -u root -p 库.表 > 路径\r\n  导入：mysql -u root -p 库.表 < 路径\r\n~~~  \r\n\r\nwindows下手动安装MySQL：\r\n\r\n1、先将my.default.ini改名为my.ini放到bin目录\r\n\r\n\r\n2、命令行执行: mysqld --initialize --user=mysql --console\r\n\r\n3、先执行以上命令, 生成库. 注意有个临时密码, 要记下来.\r\n\r\n4、mysql bin目录输入: mysqld --install 安装服务，然后启动服务\r\n\r\n5、命令行:mysql -uroot -p\r\n\r\n6、然后我们就可以修改mysql的root密码了\r\n~~~mysql \r\n  命令行执行命令：mysqladmin -u USER -p password PASSWORD\r\n~~~  \r\n',0,1,1505899837,1505917936),(6,'nginx_reload.bat',1,100,NULL,'~~~php \r\n@echo off\r\necho Stopping nginx...\r\ntaskkill /F /IM nginx.exe > nul\r\necho Stopping PHP FastCGI...\r\ntaskkill /F /IM php-cgi.exe > nul\r\necho Starting PHP FastCGI...\r\nC:\\wnmp\\RunHiddenConsole.exe C:\\wnmp\\PHP\\php-cgi.exe -b 127.0.0.1:9000-c C:\\wnmp\\PHP\\php-cli.ini\r\necho Starting nginx...\r\nC:\\wnmp\\RunHiddenConsole.exe C:\\wnmp\\nginx\\nginx.exe -p C:\\wnmp\\nginx\r\nexit\r\n~~~  \r\n',0,1,1505900478,1505900478),(7,'几个小知识点',1,100,NULL,'sublime 几个常用插件**Emmet	SublimeLinter  PackageResourceViewer  Git	 Alignment  Snippets  SublimeCodeIntel**\r\n- - -\r\nVim     ` :%s/old/new/g			替换全部的old为new`\r\n- - -\r\nRedis      `config set stop-writes-on-bgsave-error no`\r\n- - -\r\n事务\r\n~~~php\r\nstart/begin transaction;\r\n\r\nset autocommit = 0;\r\n\r\nrollback;\r\n\r\nSAVEPOINT pointName;\r\n\r\nROLLBACK TO SAVEPOINT pointName\r\n~~~',0,1,1505900769,1505908818),(8,'Mongo 语法',1,9,NULL,'新建用户并授权： `db.addUser(\"user\", \"psw\")db.auth(\"user\", \"psw\")`\r\n\r\n显示库列表：`show dbs`\r\n\r\n进数据库：`use dbname`\r\n\r\n显示表列表：`show collections`\r\n\r\n查询主从状态：`rs.status`\r\n\r\n创建库：`无需单独创建，直接use进去`\r\n\r\n创建表：`无需单独创建，直接插入数据`\r\n\r\n删除表：`db.tname.drop()`\r\n\r\n删除库：`use dbname; db.dropDatabase()`\r\n  \r\n插入记录： `db.tbname.insert({id: 2})`\r\n\r\n删除记录：`db.tbname.remove({id: 2})`\r\n\r\n修改/更新记录：`db.tbname.update({id: 2}, {$set: {id: 3}}, false, true)`\r\n  \r\n查询所有记录：`db.tbname.find()`\r\n\r\n查询所有列：`db.tbname.find({}, {id: 1})`\r\n\r\n条件查询：`db.tbname.find({id: 2})`\r\n\r\n条件查询：`db.tbname.find({id: {$lt: 2}})`\r\n\r\n条件查询：`db.tbname.find({id: {$gte: 2}})`\r\n\r\n条件查询：`db.tbname.find({id: 2, name: \'steve\'})`\r\n\r\n条件查询：`db.tbname.find($or: [{id: 2}, {name: \'steve\'}])`\r\n\r\n条件查询：`db.tbname.findOne()`\r\n  \r\n模糊查询：`db.tbname.find({name: /steve/})`\r\n\r\n模糊查询：`db.tbname.find({name: /^steve/})`\r\n  \r\n获取表记录数：`db.tbname.count()`\r\n\r\n获取有条件的记录数：`db.tbname.find({id: 2}).count()`\r\n\r\n查询时去掉重复值：`db.tbname.distinct(\'last_name\')`\r\n  \r\n正排序查询：`db.tbname.find().sort({id: 1})`\r\n\r\n逆排序查询：`db.tbname.find().sort({id: -1})`\r\n  \r\n取存储路径：`db.tbname.find({id = 3}).explain()`\r\n- - -\r\n**特别要注意的是**：mongodb插入多个字段语法\r\n>   `db.user.insert({id: 1, name: \'steve\', sex: \'male\'})`  √\r\n\r\n>   ` db.user.insert({id: 2}, {name: \'bear\'}, {sex: \'female\'})`  ×\r\n\r\nphp中使用的简单例子：\r\n~~~php\r\n$manager = new MongoDB\\Driver\\Manager(\"mongodb://admin:111111@localhost:27017\");\r\n\r\n$query = new MongoDB\\Driver\\Query([\'title\' => \'MHBJG\']);\r\n$cursor = $manager->executeQuery(\'db.tbname\', $query);\r\n\r\nforeach ($cursor as $document) {\r\n    var_dump($document);\r\n    // var_dump($document->title);\r\n}\r\n~~~',0,1,1505909421,1505909970),(9,'make install mysql & php',1,5,NULL,'~~~shell\r\n#!/bin/bash\r\n#Program:\r\n#	php & mysql installation\r\n# History:\r\n# 	2017.04.19 Wyang First release\r\n\r\nPATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:~/bin\r\nexport PATH\r\n\r\n- - -\r\n\r\n# echo \"create dirs (mysql/data, boost, softbags)...\"\r\nsudo mkdir -p /usr/local/mysql/data\r\nsudo mkdir -p /usr/local/boost\r\nsudo mkdir -p /usr/local/softbags\r\n\r\n# echo \"create user for mysql(msyql) and php(www-data)\"\r\nsudo groupadd mysql && sudo useradd mysql -g mysql\r\nsudo groupadd www-data && sudo useradd www-data -g www-data\r\n\r\n# echo \"installing dependence for mysql\"\r\nsudo apt install cmake libncurses5-dev bison  libaio1 build-essential libxml2\r\n\r\n# echo \"installing dependence for php\"\r\nsudo apt install autoconf libxml2-dev libssl-dev libcurl4-gnutls-dev libjpeg-dev libpng-dev libmcrypt-dev libreadline6 libreadline-dev libfreetype6-dev pkg-config\r\n\r\nsudo cp -r /usr/include/x86_64-linux-gnu/curl/ /usr/include/\r\n\r\n- - -\r\n\r\ncd /usr/local/softbags\r\n\r\n# download mysql-5.7.18.tar.gz		\r\nhttp://dev.mysql.com/downloads/mysql/\r\n# download boost_1_59_0.tar.gz		\r\nhttps://sourceforge.net/projects/boost/files/boost/1.59.0/boost_1_59_0.tar.gz/download\r\n# download php-7.1.4.tar.gz		\r\nhttp://php.net/get/php-7.1.4.tar.gz/from/a/mirror\r\n\r\n# echo \"downloading mysql5.7.18 ...\"\r\nsudo wget https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.18.tar.gz\r\n\r\n# echo \"downloading boost_1_59_0 ...\"\r\nsudo wget https://nchc.dl.sourceforge.net/project/boost/boost/1.59.0/boost_1_59_0.tar.gz\r\n\r\n# echo \"downloading php-7.1.4 ...\"\r\nsudo wget http://cn2.php.net/distributions/php-7.1.4.tar.gz\r\n\r\n# echo \"parsing these bags ...\"\r\nsudo tar -zxf mysql-5.7.18.tar.gz\r\nsudo tar -zxf php-7.1.4.tar.gz\r\n\r\ncd /usr/local/boost/\r\nsudo cp /usr/local/softbags/boost_1_59_0.tar.gz ./\r\nsudo tar -zxf boost_1_59_0.tar.gz\r\n\r\n- - -\r\n\r\n# echo \"Install MySQL ===================================================\"\r\ncd /usr/local/softbags/mysql-5.7.18\r\n\r\nsudo cmake . -DCMAKE_INSTALL_PREFIX=/usr/local/mysql -DMYSQL_DATADIR=/usr/local/mysql/data -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_ARCHIVE_STORAGE_ENGINE=1 -DWITH_BLACKHOLE_STORAGE_ENGINE=1 -DWITH_PARTITION_STORAGE_ENGINE=1 -DWITH_PERFSCHEMA_STORAGE_ENGINE=1 -DWITHOUT_EXAMPLE_STORAGE_ENGINE=1 -DWITHOUT_FEDERATED_STORAGE_ENGINE=1 -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci -DWITH_EXTRA_CHARSETS=all -DENABLED_LOCAL_INFILE=1  -DMYSQL_UNIX_ADDR=/usr/local/mysql/data/mysql.sock -DCOMPILATION_COMMENT=\"string\"-DENABLED_PROFILING=1 -DOPTIMIZER_TRACE=1 -DWITH_DEBUG=1 -DWITH_BOOST=/usr/local/softbags/boost_1_59_0\r\n\r\nsudo make && sudo make install\r\n\r\nsudo /usr/local/mysql/bin/mysqld --initialize --user=mysql --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data/\r\n\r\n# save the secret_temp\r\n\r\nsudo /usr/local/mysql/bin/mysqld_safe --user --defaults-file=/etc/my.cnf\r\nmysqladmin -u root -p password 111111\r\n# mysql> set password for root@localhost=password(\'新密码\');\r\n\r\n# input the secret_temp\r\n\r\nsudo chown -R mysql:mysql /usr/local/mysql\r\n\r\nsudo update-rc.d -f mysql enable\r\nsudo update-rc.d -f mysql default\r\n\r\n- - -\r\n\r\n# echo \"Install PHP =====================================================\"\r\ncd /usr/local/softbags/php-7.1.4\r\n\r\nsudo ./configure --prefix=/usr/local/php --with-config-file-path=/usr/local/php/etc --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd --with-fpm-user=www-data --with-fpm-group=www-data --with-openssl --with-iconv-dir --with-freetype-dir --with-jpeg-dir --with-png-dir --with-zlib --with-libxml-dir --with-curl --with-mcrypt --with-mhash --with-mcrypt --without-pear --with-gd --with-xmlrpc --enable-mysqlnd --enable-xml --disable-rpath --enable-bcmath --enable-shmop --enable-sysvsem --enable-inline-optimization --enable-mbregex --enable-fpm --enable-mbstring --enable-gd-native-ttf --enable-pcntl --enable-sockets --enable-zip --enable-soap --enable-opcache --enable-maintainer-zts\r\n\r\nsudo make && sudo make test && sudo make install\r\n\r\n# echo \"copy php.ini ...\"\r\nsudo cp php.ini-development /usr/local/php/etc/php.ini\r\n# sudo echo \'extenson=memcache.so\' >> /usr/local/php/etc/php.ini\r\n\r\n# update mysqli.default_socket=/usr/local/mysql/data/mysql.sock\r\n# update pdo_mysql.default_socket=/usr/local/mysql/data/mysql.sock\r\n\r\nsudo cp /usr/local/php/etc/php.ini /usr/local/php/etc/php-cli.ini\r\n# sudo echo \'extenson=pthreads.so\' >> /usr/local/php/etc/php-cli.ini\r\n\r\n\r\n\r\n# echo \"copy php-fpm.conf and www.conf\"\r\ncd /usr/local/php/etc\r\nsudo cp php-fpm.conf.default php-fpm.conf\r\nsudo cp ./php-fpm.d/www.conf.default ./php-fpm.d/www.conf\r\n\r\n# update www.conf:\r\n# user = www-data\r\n# group = www-data\r\n\r\n# echo \"copy init.d.php-fpm to /etc/init\"\r\nsudo chmod 755 /usr/local/softbags/php-7.1.4/sapi/fpm/init.d.php-fpm\r\nsudo cp -a /usr/local/softbags/php-7.1.4/sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm\r\nsudo cp -a /usr/local/softbags/php-7.1.4/sapi/fpm/init.d.php-fpm /usr/local/php/sbin/init.d.php-fpm\r\n\r\n# echo \"link to rc5.d\"\r\ncd /etc/rc5.d\r\nsudo ln -s /etc/init.d/php-fpm && mv php-fpm S01php-fpm\r\n\r\nsudo chown -R www-data:www-data /usr/local/php\r\n\r\n# sudo /etc/init.d/php-fpm start\r\n\r\n- - -\r\n\r\n# echo \"Add to service manager\"\r\nsudo update-rc.d -f php-fpm enable\r\n# echo \"start with boot\"\r\nsudo update-rc.d -f php-fpm default\r\n\r\n- - -\r\n\r\n# echo \"Install php.memcache/php.pthreads -------------------\"\r\n\r\nsudo apt install memcached\r\n\r\n# echo \"clone pecl-memcache & pthreads ...\"\r\ncd /usr/local/softbags/\r\ngit clone https://github.com/websupport-sk/pecl-memcache.git\r\ngit clone https://github.com/krakjoe/pthreads.git\r\n\r\n# echo \"make pecl-memcache ...\"\r\ncd /usr/local/softbags/pecl-memcache\r\nsudo /usr/local/php/bin/phpize\r\nsudo ./configure --with-php-config=/usr/local/php/bin/php-config\r\nsudo make && sudo make test && sudo make install\r\n\r\n# echo \"make pthreads\"\r\ncd /usr/local/softbags/pthreads\r\nsudo /usr/local/php/bin/phpize\r\nsudo ./configure --with-php-config=/usr/local/php/bin/php-config\r\nsudo make && sudo make test && sudo make install\r\n\r\n- - -\r\n\r\n# echo \"Export Enviriament variable --------------------\"\r\n\r\nsudo echo \'export PATH=$PATH:/usr/local/php/bin:/usr/local/php/sbin:/usr/local/mysql/bin\' >> ~/.bashrc\r\nsudo echo \'export PATH\' >> ~/.bashrc\r\n~~~',0,1,1505910485,1505910485),(10,'mysql 语法',1,9,NULL,'## MySQL：关系型数据库管理系统（RDBMS） ##\r\n\r\n增加字段：`ALTER TABLE table_name ADD field_name field_type;`\r\n\r\n删除字段：`ALTER TABLE table_name DROP field_name;`\r\n\r\n添加字段：`ALTER TABLE  `user_movement_log` Add column `new_field_name` int not null default 0 AFTER `field_name`; `\r\n\r\n删除字段：`ALTER TABLE `user_movement_log` DROP column `field_name`\r\n\r\n调整字段顺序：`ALTER TABLE `user_movement_log` CHANGE `field_name` int not null default 0 AFTER `RegionID`;\r\n\r\n修改原字段名称及类型：`ALTER TABLE table_name CHANGE old_field_name new_field_name field_type;`\r\n\r\n主键 `alter table tabelname add new_field_id int(5) unsigned default 0 not null auto_increment ,add primary key (new_field_id);`\r\n\r\n重命名表  `alter table old_table_name rename new_table_name;`\r\n\r\n- - -\r\n\r\n**添加索引：**\r\n\r\n`ALTER TABLE table_name ADD INDEX index_name (column_list)`\r\n\r\n`ALTER TABLE table_name ADD UNIQUE (column_list)`\r\n\r\n`ALTER TABLE table_name ADD PRIMARY KEY (column_list)`\r\n\r\n`CREATE INDEX index_name ON table_name (column_list)`\r\n\r\n`CREATE UNIQUE INDEX index_name ON table_name (column_list)`\r\n\r\n**删除索引：**\r\n\r\n`DROP INDEX index_name ON talbe_name`\r\n\r\n`ALTER TABLE table_name DROP INDEX index_name`\r\n\r\n`ALTER TABLE table_name DROP PRIMARY KEY`\r\n\r\n**查看索引：**\r\n\r\nmysql> `show index from tblname;`\r\n\r\nmysql> `show keys from tblname;`\r\n\r\n- - -\r\n## 权限操作 ##\r\n\r\n新建用户： `insert into mysql.user(Host, User, Password) values(\"localhost\", \"test\", password(\"1234\"));`\r\n\r\n　　*这样就创建了一个名为：test 密码为：1234 的用户。*  \r\n　　*注意：此处的\"localhost\"，是指该用户只能在本地登录，不能在另外一台机器上远程登录。如果想远程登录的话，将\"localhost\"改为\"%\"，表示在任何一台电脑上都可以登录。也可以指定某台机器可以远程登录。*  \r\n \r\n为用户授权：`grant all privileges on testDB.* to test@localhost identified by \'1234\';`\r\n\r\n授权格式：`grant 权限 on 数据库.* to 用户名@登录主机 identified by \"密码\";　`\r\n　　\r\n         mysql> `flush privileges;`    //刷新系统权限表\r\n\r\n指定部分权限给一用户：`grant select,update on testDB.* to test@localhost identified by \'1234\';`\r\n\r\n        mysql>  `flush privileges;`     //刷新系统权限表\r\n\r\n授权test用户拥有所有数据库的某些权限： `grant select,delete,update,create,drop on *.* to test@\"%\" identified by \"1234\";`\r\n\r\n        * test用户对所有数据库都有select,delete,update,create,drop 权限 *\r\n\r\n        *@\"%\" 表示对所有非本地主机授权，不包括localhost*\r\n\r\n对localhost授权：`grant all privileges on testDB.* to test@localhost identified by \'1234\';`\r\n \r\n- - -\r\n## 用户操作 ##\r\n\r\n删除用户：`Delete FROM user Where User=\'test\' and Host=\'localhost\';`\r\n\r\n         mysql>  `flush privileges;`\r\n\r\n         mysql>  `drop database testDB;`   //删除用户的数据库\r\n\r\n \r\n修改指定用户密码：`update mysql.user set password=password(\'新密码\') where User=\"test\" and Host=\"localhost\";`\r\n         mysql>  `flush privileges;`\r\n \r\n列出所有数据库：`show database;`\r\n \r\n显示数据表结构：`show create table;`\r\n\r\n- - -\r\n\r\n\r\n## 存储引擎：MyISAM, InnoDB, Memory ##\r\n\r\n**MyISAM**：由三张表组成（.frm-表格定义文件，MYD-数据文件，MYI－索引文件）\r\n\r\n1、适于select操作，适于count()命令；\r\n\r\n2、占用空间小；\r\n\r\n3、支持全文索引、GIS数据；\r\n\r\n4、可建立联合索引；\r\n\r\n5、不支持事务、只提供表级锁；\r\n\r\n**InnoDB**：\r\n\r\n1、适于insert, update操作；\r\n\r\n2、占用空间大；\r\n\r\n3、支持事务和主键和外键，安全性能好；\r\n\r\n4、提供行级锁和表级锁；\r\n\r\n5、只能单独索引；\r\n\r\n**Memory**：数据存于内存中，生命周期短，表锁\r\n\r\n- - -\r\n\r\n**索引**（是帮助MySQL高效获取数据的数据结构）：\r\n\r\n1、主键索引：primary key (`id`);\r\n\r\n2、普通索引：index/key index_title (`title`);\r\n\r\n3、联合索引：index/key index_username (`username`, `password`);\r\n\r\n4、唯一索引：unique key uk_id (`id`);\r\n\r\n- - -\r\n\r\n**行级锁**：锁行（InnoDB），适于高并发；\r\n\r\n**表级锁**：锁整张表(MyISAM)；\r\n\r\n**排它锁**：也称写锁，只能一个事务持有，可读可写，期间其它事务不能读写；\r\n\r\n**共享锁**：也称读锁，每个事务都可持有，期间只能读，都不能写；\r\n\r\n**悲观锁**：操作数据时，默认自加锁，如数据被其它程序占用，加锁失败，无法操作；\r\n\r\n**乐观锁**：操作数据时，通过版本对比，确认此操作的有效性；',0,1,1505912062,1505912304),(11,'pthreads',1,4,NULL,'摘自：[张宴的博客](http://zyan.cc/pthreads/)\r\n~~~php\r\n<?php\r\n  class test_thread_run extends Thread \r\n  {\r\n      public $url;\r\n      public $data;\r\n\r\n      public function __construct($url)\r\n      {\r\n          $this->url = $url;\r\n      }\r\n\r\n      public function run()\r\n      {\r\n          if(($url = $this->url))\r\n          {\r\n              $this->data = model_http_curl_get($url);\r\n          }\r\n      }\r\n  }\r\n\r\n  function model_thread_result_get($urls_array) \r\n  {\r\n      foreach ($urls_array as $key => $value) \r\n      {\r\n          $thread_array[$key] = new test_thread_run($value[\"url\"]);\r\n          $thread_array[$key]->start();\r\n      }\r\n\r\n      foreach ($thread_array as $thread_array_key => $thread_array_value) \r\n      {\r\n          while($thread_array[$thread_array_key]->isRunning())\r\n          {\r\n              usleep(10);\r\n          }\r\n          if($thread_array[$thread_array_key]->join())\r\n          {\r\n              $variable_data[$thread_array_key] = $thread_array[$thread_array_key]->data;\r\n          }\r\n      }\r\n      return $variable_data;\r\n  }\r\n\r\n  function model_http_curl_get($url,$userAgent=\"\") \r\n  {\r\n      $userAgent = $userAgent ? $userAgent : \'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.2)\'; \r\n      $curl = curl_init();\r\n      curl_setopt($curl, CURLOPT_URL, $url);\r\n      curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\r\n      curl_setopt($curl, CURLOPT_TIMEOUT, 5);\r\n      curl_setopt($curl, CURLOPT_USERAGENT, $userAgent);\r\n      $result = curl_exec($curl);\r\n      curl_close($curl);\r\n      return $result;\r\n  }\r\n\r\n  for ($i=0; $i < 100; $i++) \r\n  { \r\n      $urls_array[] = array(\"name\" => \"baidu\", \"url\" => \"http://www.baidu.com/s?wd=\".mt_rand(10000,20000));\r\n  }\r\n\r\n  $t = microtime(true);\r\n  $result = model_thread_result_get($urls_array);\r\n  $e = microtime(true);\r\n  echo \"多线程：\".($e-$t).\"\\n\";\r\n\r\n  $t = microtime(true);\r\n  foreach ($urls_array as $key => $value) \r\n  {\r\n      $result_new[$key] = model_http_curl_get($value[\"url\"]);\r\n  }\r\n  $e = microtime(true);\r\n  echo \"For循环：\".($e-$t).\"\\n\";\r\n~~~',0,1,1505912504,1505912504),(12,'摘自网络某大神的语录',1,100,NULL,'        在撰写此文前首先必须申明的是本人不鄙视任何一种框架，也无意于挑起PHP框架间的战争，更没有贬低某个框架使用者的用意，本文纯粹个人的看法。你可以认为我无知也好，或者装逼也好，请不要试着在任何情况下，随便发起言语的攻击，这只是我个人的一些经验而已，你可以选择赞成或不赞成，也可以选择看与不看。\r\n\r\n        还有本人基本对这些框架中的大部分都用的时间比较长，绝对不是随便出个Hello World!就在这里评论，曾任某某底层本土公司的技术总监，某某所谓巨头公司的IOS架构师和PHP高级程序员，XX外资创业企业的项目经理，基本上在这些职位工作期间基本上对大部分这里提到的PHP框架使用的都比较深入，也曾参与或主办过这些公司的招聘，现在虽然在创业，但是人才需求也是按照本文来的。写这篇文章的目的不在于跟阅读者挑起任何语言战争，只是希望给正在路上的PHPER提供一条适合自己的道路，如果你要骂SB，请到其他处，OK？对你没帮助你可以不看的。\r\n\r\n        好了开始我的分析吧。。。\r\n- - -\r\n        第一种境界:学院主义—无框架型\r\n\r\n        这是一个PHP语言的入门时期，也许也是你编程生涯的开始，可能你在读大学或者在培训部培训的初期，这个时候你正在吭HTML5,CSS3,JS,Jquery还有对于你现在来说最重要的，应该学的东西PHP+Mysql。这个是你建立好的雏形的良好时机，也是最容易放弃的最难时期，并且决定你后面所有的编程职业生涯，前提是你真的想从事编程职业。\r\n\r\n        常说的语言及做的事情:这个好难，太难搞了;我要考这个认证，对将来工作有帮助;找个单位实习下;接个项目练练手\r\n        对各种付费虚拟产品的态度(如付费课程,付费服务器等)：买不起啊。。。学费都花了这么多，我还是找免费的吧或者能不能便宜点啊\r\n        薪资水平:1.5k左右\r\n        公司职位:实习生\r\n        基本技能:html5,css3,js,jquery\r\n        操作系统:windows xp,windows 7,windows 8\r\n        编程工具:dreamweaver,eclipse,netbeans,editplus\r\n        PHP框架:无框架概念\r\n        占据人数:20%\r\n- - -\r\n        第二种境界:屌丝主义—快速原型框架\r\n        \r\n        这个时候你已经从学校或培训部毕业随之而来的劣性发展成就了这个境界，这个境界的程序员占据了PHPER人数 40%以上。为什么说是屌丝主义？经过前期的培训部速成培训(这个境界大部分是XXX100，XXX兄弟连等出来的)，你基本掌握了一些国内的CMS的使用与二次开发，以及一些类似Thinkphp,Codeigniter,Brophp等低层次框架的开发，并且去一些不怎么样的所谓创业公司或者大部分去了一些企业网站制作公司做一些企业网站，小模块，小系统的开发，然后你会说我好强大，认为PHP也就全会了，做了井底之蛙。。。崇尚quick and dirty。也就是这部分在国外不存在的人导致了PHP在国内长期被Rails,Nodejs等使用者鄙视。\r\n        语言行为及特征状态:\r\n        \r\n        看不懂任何英语技术，英语文档，凡事没有培训部在搞的，只有英文文档的东西国内一律没大公司在用，都非主流，排斥英文文档和新技术，以及各种超出他学习能力范围的技术。\r\n\r\n        不知道的技术一律会说，这些技术没有公司或者很少公司在用，谁要学。。。，大公司都是自己开发框架的。。。。\r\n        比如 Angularjs,Emberjs,Hadoop,Mongodb,Nodejs,Rails,Requirejs等有点极客的都没听说过，然后会认为Java,.NET这种是企业级，C语言算法才是王道，用的公司多，真正的高手用C扩展PHP的，我想说别他妈这么屌丝好吗，你个XXX，我想说请你睁眼看看世界，好吗？别动不动别人说些你不懂的就说JAVA，C算法，数据结构这些，你懂吗，你个屌丝一枚的。。。你的垃圾公司没在用，不证明其它好的公司没在用，不是大家都用TP和CI的，OK？就知道php+mysql了？\r\n\r\n        对真懂PHP的人的态度\r\n\r\n        TP很给力啊，能开发的话什么框架都无所谓，技术高你就自己开发一个啊\r\n        你自己什么都不懂还来装逼\r\n        TP够用了，CI够用了\r\n        你有本事用C扩展个框架啊，SB\r\n        对各种付费虚拟产品的态度(如付费课程,付费服务器等)\r\n        广告，X你ma\r\n        收费的视频课程谁要，SB\r\n        免费空间，免费主机找找看\r\n        用开源的东西收费，无耻\r\n        喜欢用虚拟主机，只选择PHP5.2的空间上架或者用windows服务器\r\n        喜欢windows，认为用mac的都是装逼\r\n        认为只有兼容所有浏览器，至少也要支持IE8的才是正常的网站\r\n        让他付钱，他宁愿死\r\n        操作系统:windows xp,windows 7,windows 8\r\n        使用的技能：Discuz,DEDECMS，Thinkphp,Yii Framework1,Codeigniter,Jquery…\r\n        PHP框架：Thinkphp,Codeigniter\r\n        所在公司：做企业站，做地方门户，做行业门户，做管理系统等\r\n        经常去的网站：CI中国，PHP100，Thinkphp官网,phpchina,discuz官方论坛,dedecms论坛等\r\n        编程工具:dreamweaver,eclipse,notpad++,editplus,EclipsePHP Studio(就xxx100那个垃圾出的工具)\r\n        薪资待遇：2.5k-5k\r\n        占据人数：40%\r\n- - -\r\n        第三种境界：崇拜主义—全栈型框架\r\n\r\n        这部分人一般都是大学本科以上毕业，非培训部速成。但是由于前期也是很薄弱，学校里老师教的可能还不如速成培训部的，所以除了观念的不同，大部分实用技术不如速成培训部出来的。但是观念基本决定了后面走的路不一样。这部分人当中大部分转了IOS,Rails等技术甚至一大半都转行了，甚于一小部分进入了PHPER行列。因为在学校英文都是过了一定等级的，看基本的英文文档还是比较可以，再加上可能由于学历限制去了一些比较还可以的公司，从基础程序员甚至实习生做起，还可以的公司一般都会使用大量只有英文文档的技术，比如我以前一个同事刚毕业的时候去应聘一个新美合资PHP工程师的职位，要求就是懂Agavi框架，还要懂前端的restful框架-backbone,其实那时候backbone刚出来还不错的。然后就在试用期死啃这两个框架，因为有大量比较散的中文文档，所以终于吭懂了，以后看其它部分中英文都有点的文档等基本也可以尝试看看了，但是毕竟也能通过半英语学习了，然后进步都是很快。但是一个悲催的转折点又来了，这时候就看你的选择了。\r\n\r\n        是什么转折点呢？就是对某一个框架(这里框架只是某种技术的狭义说法)出现了比较大的喜欢程度，而且这个框架也基本中文文档不全，但是用的中小型有新意的创业型公司，外资企业，合资企业都蛮多的，薪资待遇也还不错，尤其那些不能看英文文档的人让他获得了优越感，再加上这些框架本身都是基于composer包,php-fig最新标准等发布的，并且学习使用也不是很复杂，深深的让他喜欢上了此款框架，在这个时候基本上出于已经产生的西方主义的好奇心，他已经掌握了一些类似bootstrap,backbone等简单的前端UI技术以及轻量MV*框架，这个时候也许真的是做什么项目，只要是web，他都可以做了，并且出于中小型高端企业的要求，他需要会的还有Linux服务器的各种架设比如web服务器，邮件服务器等，这个时候基本上他如果有客户资源自己都可以做产品创业了。所以转则点就是他这个时候选择不思进取(当然创业不算，因为创业者是最牛逼的)，一直用他掌握的框架迅速的开发各种东西，还是学新的框架？如果是前者，将导致他永久的崇拜一个比较简单的全栈框架，然后永久的等待这个框架的新版本发布，而不会转移视线，更别说学新的东西了，这样基本上升就很困难了，比如说用larvel框架，那么别人跟你说zf2,sf2，你会说太复杂的东西不好，太复杂的东西不适合我。。。请改进一步吧，会有更尖端的东西等着你\r\n\r\n        对各种付费虚拟产品的态度(如付费课程,付费服务器等)\r\n\r\n        不需要课程了，谢谢，我用xxx就够了，那个太复杂不适合我\r\n        嗯，我正在找这个视频，买的，自己看这么复杂的文档太累\r\n        阿里云还是不错的\r\n        代码放Ucloud，静态资源放七牛吧\r\n        感觉BAE不错\r\n        使用的技能:bootstrap,jquery-mobile,zurb foundation,backbone,laravel4/zf1/cakephp/fuelphp/Yii2,Linux服务器等\r\n        PHP框架：laravel4,zend framework1,cakephp,fuelphp,Yii Framework2\r\n        操作系统:windows 7,windows 8,mac osx,linux\r\n        所在公司：电子商务，门户媒体，社交网络，各类创新型网站等\r\n        编程工具：sublime Text,PHPstorm,vim\r\n        经常去的网站：segmentfault，德问，v2ex,ruby-china,github,cnode等\r\n        薪资待遇：6k-10k\r\n        占据人数：25%\r\n- - -\r\n        第四种境界：完美主义—组件型框架\r\n\r\n        一般这个境界的PHP程序员基本处于一种完美状态了，基本上一个人能完成一个项目所有的东西，包括前端(前端可以设计的非常潮或者说fashion),后端，已经服务器的架设优化，包括云计算底层的开发，各种虚拟化的东西，比如KVM等，基本已经掌握各种开发，但是开发经验不一定就多，年龄不会超过30，基本会各种技术，移动，底层，前端，后端，mac,linux什么的都可以拿起就玩，会用最屌的开发工具—emacs进行自己的编码，崇尚完美主义，喜欢把用户体验和架构都做的一点瑕疵都没有，比如一个颜色的调度课程都要花去他一整天的功夫，但是在团队开发面前，更能发挥出这个境界的威力，因为还没达到第五种神的境界，所以过于最求强大，不仅会带来项目时间上的硬伤，也会给项目带来超级大的成本花费，包括学员的学习成本，强大的框架需要的维护成本等等。适合在一些比较大的巨头企业或者大公司或者外资创业企业做项目领导或者首席架构等职位，单论技术，已经在PHP方面可以算是很强大了。你需要会的是学习期至少一年多到两年的symfony2框架，而不是几天就会的laravel，所以花费的学习成本是极其大的，承担的风险也大，一般在这个境界的PHP程序员，国内并不多，但是也不是很少，这个阶段的程序员一般都是从其它编程语言转过来的，比如rails或者nodejs或者Python等，但是java和.net由于本身就不符合极客的历史潮流，转换到PHP已经无法到这里了，一般直接转屌丝码农境界去了。rails或node等转过来的程序员一般都理解依赖注入，监听器，过滤器等等技术面，并且node里的npm和rails里的gem与php的composer是一样的，sf2和zf2的bundle机制也是与rails相同的，所以导致了rails程序员一转3，4个月就会sf2的情况，再加上zf2和sf2本身没中文文档，所以必须是英文比较好的才能学会，尤其sf2，有book,cookbook,refenrencebook,componentbook，bundlesbook等等,而且必须用几十个第三方bundle才能完成一个真正意义上的应用，复杂度是难以想象的，但是复杂的东西有其强大之处，比如hwioauthbundle,fosuserbundle,fosrestbundle等，都是非常不错的，fosrestbundle中根据group加载关联推到rest，而不必全部加载关联数据就是个很不错的例子，而asseticbundle直接可以合并压缩js和css,并且基于node的组件，更是把sf2的强大发挥的淋漓尽致，但是每个bundle的学习成本基本比学整个laravel4框架难度还大，而且全是github的wiki没有任何中文，这就不但加大了技术学习成本也加大了语言学习成本，所以到达这个境界需要无比的毅力和探索的好奇心，两者缺一不可。\r\n\r\n        对各种付费虚拟产品的态度(如付费课程,付费服务器等)\r\n        嗯，有需要，课程买好了,有空看看哦\r\n        udemy上的课程做的很不错，一般$99的课程都不错的，我买了Rails\r\n        我觉得paas比较好，国内paas都不给力啊\r\n        感觉qingcloud很不错，一直在用\r\n\r\n        使用的技能：\r\n        前端:Anauglar/ember/backbone,jquery,bootstrap/foundation,Sass,Scss,Less…各种restful技术\r\n        后端:Symfony2/Zend Framework2,Rails,Nodejs\r\n        运维Linux玩的超级熟练,Mongodb,Mysql已经Redis,Nginx等不管web还是其它服务器都能架设，优化并维护，还有各种虚拟化KVM等\r\n        底层:还不给力\r\n        移动:一般以IOS开发的居多，可能会有安卓的开发\r\n        HTML5:Sencha Touch等这些框架随便玩玩\r\n        PHP框架：symfony2,zend framework2\r\n        所在公司：各类创新型网站,移动开发,云计算web层开发(可能兼顾底层)等\r\n        经常去的网站：stackoverflow,google,github等\r\n        编程工具:sublime text , emacs,text mate\r\n        薪资待遇：11k-15k\r\n        占据人数：10%\r\n- - -\r\n        第五种境界：极客主义—微型框架\r\n\r\n        请注意：这种境界必须经过前面的第四种境界才能到达\r\n        这个境界不必多说，相信仁者见仁，智者见智了。第二种境界的码农会说这个连他们都不如，但是第四种境界的高手会对他们膜拜，只就是极客的魅力，只让高手膜拜。微型框架之所以有这个效应是因为你学框架本身，一晚上就会，你要用的像个极客，也许难度早已超出你的想象，是第四种境界的好几倍，比如你要restful，随随便便调用一下，symfony2的组件再通过组件调用fosrestbundle,直接就可以写rest服务器了，如果你是菜鸟，就会直接返回json，这就是微型框架高明之处，神与菜鸟就一念之隔。不多说自己体会。只有一个比喻，还记得神雕侠侣吗？第三种境界就是独孤求败30岁前用的锋利无比的剑，第四种境界就是他中年用的也是杨过后来用的重80斤却不开锋的剑，第五种境界就是他晚年用的木剑，其实是回归原始无剑胜有剑了，此时不需要什么强大的了，微型框架各种引入(别跟我最后来一句牛人自己开发框架，OK？那是傻逼产生垃圾做的东西)，都是神的。。。。。。。\r\n\r\n        只能说你的薪资不低于20k了，如果是这个境界，也可以自己选择创业哦。',0,1,1505912999,1505913171),(13,'window.location',1,8,NULL,'设置或获取对象指定的文件名或路径：`alert(window.location.pathname)`\r\n\r\n设置或获取整个 URL 为字符串：`alert(window.location.href);`\r\n\r\n设置或获取与 URL 关联的端口号码：`alert(window.location.port)`\r\n\r\n设置或获取 URL 的协议部分：`alert(window.location.protocol)`\r\n\r\n设置或获取 href 属性中在井号“#”后面的分段：`alert(window.location.hash)`\r\n\r\n设置或获取 location 或 URL 的 hostname 和 port 号码：`alert(window.location.host)`\r\n\r\n设置或获取 href 属性中跟在问号后面的部分：`alert(window.location.search)`\r\n\r\n获取变量的值(截取等号后面的部分)\r\n~~~php\r\n var url = window.location.search;\r\n//    alert(url.length);\r\n//    alert(url.lastIndexOf(\'=\'));\r\nvar loc = url.substring(url.lastIndexOf(\'=\')+1, url.length);\r\n~~~\r\n用来得到当前网页的域名：`document.domain;`',0,1,1505913428,1505913428),(14,'Redis 语法',1,9,NULL,'**phpredis是php的一个扩展，效率是相当高有链表排序功能，对创建内存级的模块业务关系很有用;以下是redis官方提供的命令使用技巧:**\r\n\r\n#### 下载地址如下： ####\r\n[https://github.com/owlient/phpredis](https://github.com/owlient/phpredis)（支持redis 2.0.4）\r\n\r\nRedis::__construct  构造函数\r\n\r\n`$redis = new Redis();`\r\n\r\n\r\n#### connect, open 链接redis服务 ####\r\n\r\n参数：\r\n\r\n`host: string`，服务地址;\r\n\r\n`port: int`,端口号;\r\n\r\n`timeout: float`, 链接时长 (可选, 默认为 0 ，不限链接时间)\r\n\r\n***注: 在redis.conf中也有时间，默认为300***\r\n\r\n`pconnect, popen` 不会主动关闭的链接\r\n\r\n`setOption` 设置redis模式\r\n\r\n`getOption` 查看redis设置的模式\r\n\r\n`ping` 查看连接状态\r\n\r\n`get` 得到某个key的值（string值）\r\n\r\n*如果该key不存在，return false*\r\n\r\n`set` 写入key 和 value（string值）\r\n\r\n*如果写入成功，return ture*\r\n\r\n`setex` 带生存时间的写入值\r\n\r\n`$redis->setex(\'key\', 3600, \'value\'); `// *sets key → value, with 1h TTL.*\r\n\r\n`setnx` 判断是否重复的，写入值\r\n\r\n`$redis->setnx(\'key\', \'value\');`\r\n\r\n`$redis->setnx(\'key\', \'value\');`\r\n\r\n`delete`  删除指定key的值\r\n\r\n*返回已经删除key的个数（长整数）*\r\n\r\n`$redis->delete(\'key1\', \'key2\');`\r\n\r\n`$redis->delete(array(\'key3\', \'key4\', \'key5\'));`\r\n\r\n`ttl`  得到一个key的生存时间\r\n\r\n`persist`  移除生存时间到期的key\r\n\r\n*如果key到期 true 如果不到期 false*\r\n\r\n`mset` （redis版本1.1以上才可以用）同时给多个key赋值\r\n\r\n`$redis->mset(array(\'key0\' => \'value0\', \'key1\' => \'value1\'));`\r\n\r\n- - -\r\n\r\n`multi, exec, discard `  进入或者退出事务模式\r\n\r\n参数可选 `Redis::MULTI` 或 `Redis::PIPELINE`. 默认是 `Redis::MULTI`\r\n\r\n`Redis::MULTI`：将多个操作当成一个事务执行\r\n\r\n`Redis::PIPELINE`：让（多条）执行命令简单的，更加快速的发送给服务器，但是没有任何原子性的保证\r\n\r\n`discard`：删除一个事务\r\n\r\n`multi()`，返回一个redis对象，并进入 `multi-mode` 模式，一旦进入 `multi-mode` 模式，以后调用的所有方法都会返回相同的对象，只到 `exec()` 方法被调用。\r\n\r\n`watch, unwatch`    监测一个key的值是否被其它的程序更改。\r\n\r\n*如果这个key在watch 和 exec （方法）间被修改，这个 MULTI/EXEC 事务的执行将失败（return false）*\r\n\r\n`unwatch`  取消被这个程序监测的所有key\r\n\r\n*参数，一对key的列表*\r\n\r\n`$redis->watch(\'x\');`\r\n\r\n`$ret = $redis->multi() ->incr(\'x\') ->exec();`\r\n\r\n`exists`：判断key是否存在。存在 true 不在 false\r\n\r\n`incr, incrBy`：key中的值进行自增1，如果填写了第二个参数，者自增第二个参数所填的值\r\n\r\n`$redis->incr(\'key1\');`\r\n\r\n`$redis->incrBy(\'key1\', 10);`\r\n\r\n`decr, decrBy`：做减法，使用方法同incr\r\n\r\n`getMultiple`：传参：由key组成的数组\r\n\r\n*返回参数：如果key存在返回value，不存在返回false*\r\n\r\n`$redis->set(\'key1\', \'value1\'); `\r\n\r\n`$redis->set(\'key2\', \'value2\'); `\r\n\r\n`$redis->set(\'key3\', \'value3\'); `\r\n\r\n`$redis->getMultiple(array(\'key1\', \'key2\', \'key3\'));`\r\n\r\n`$redis->lRem(\'key1\', \'A\', 2);`\r\n\r\n`$redis->lRange(\'key1\', 0, -1)`\r\n\r\n- - -\r\n\r\n### list相关操作 ###\r\n\r\n`$redis->lPush(key, value)`：在名称为key的list左边（头）添加一个值为value的 元素\r\n\r\n`$redis->rPush(key, value)`：在名称为key的list右边（尾）添加一个值为value的 元素\r\n\r\n**lPushx/rPushx**\r\n\r\n`$redis->lPushx(key, value)`：在名称为key的list左边(头)/右边（尾）添加一个值为value的元素,如果value已经存在，则不添加\r\n\r\n**lPop/rPop**\r\n\r\n`$redis->lPop(\'key\')`：输出名称为key的list左(头)起/右（尾）起的第一个元素，删除该元素\r\n\r\n**blPop/brPop**\r\n\r\n`$redis->blPop(\'key1\', \'key2\', 10)`：lpop命令的block版本。即当timeout为0时，若遇到名称为key i的list不存在或该list为空，则命令结束。如果timeout>0，则遇到上述情况时，等待timeout秒，如果问题没有解决，则对keyi+1开始的list执行pop操作\r\n\r\n`$redis->lSize(\'key\')`：返回名称为key的list有多少个元素\r\n\r\n**lIndex, lGet**\r\n\r\n`$redis->lGet(\'key\', 0)`：返回名称为key的list中index位置的元素\r\n\r\n`$redis->lSet(\'key\', 0, \'X\')`：给名称为key的list中index位置的元素赋值为value\r\n\r\n**lRange, lGetRange**\r\n\r\n`$redis->lRange(\'key1\', 0, -1)`：返回名称为key的list中start至end之间的元素（end为 -1 ，返回所有）\r\n\r\n**lTrim, listTrim**\r\n\r\n`$redis->lTrim(\'key\', start, end)`：截取名称为key的list，保留start至end之间的元素\r\n\r\n**lRem, lRemove**\r\n\r\n`$redis->lRem(\'key\', \'A\', 2)`：删除count个名称为key的list中值为value的元素。count为0，删除所有值为value的元素，count>0从头至尾删除count个值为value的元素，count<0从尾到头删除|count|个值为value的元素\r\n\r\n`lInsert`：在名称为为key的list中，找到值为pivot 的value，并根据参数Redis::BEFORE | Redis::AFTER，来确定，newvalue 是放在 pivot 的前面，或者后面。如果key不存在，不会插入，如果 pivot不存在，return -1\r\n~~~php\r\n$redis->delete(\'key1\'); \r\n$redis->lInsert(\'key1\', Redis::AFTER, \'A\', \'X\'); \r\n$redis->lPush(\'key1\', \'A\'); \r\n$redis->lPush(\'key1\', \'B\'); \r\n$redis->lPush(\'key1\', \'C\'); \r\n$redis->lInsert(\'key1\', Redis::BEFORE, \'C\', \'X\');\r\n$redis->lRange(\'key1\', 0, -1);\r\n$redis->lInsert(\'key1\', Redis::AFTER, \'C\', \'Y\');\r\n$redis->lRange(\'key1\', 0, -1);\r\n$redis->lInsert(\'key1\', Redis::AFTER, \'W\', \'value\');\r\n~~~\r\n`rpoplpush`：返回并删除名称为srckey的list的尾元素，并将该元素添加到名称为dstkey的list的头部\r\n~~~php\r\n$redis->delete(\'x\', \'y\');\r\n$redis->lPush(\'x\', \'abc\');\r\n $redis->lPush(\'x\', \'def\'); \r\n$redis->lPush(\'y\', \'123\'); \r\n$redis->lPush(\'y\', \'456\'); // move the last of x to the front of y.\r\nvar_dump($redis->rpoplpush(\'x\', \'y\'));\r\nvar_dump($redis->lRange(\'x\', 0, -1));\r\nvar_dump($redis->lRange(\'y\', 0, -1)); \r\n输出：\r\nstring(3) \"abc\" \r\narray(1) { [0]=> string(3) \"def\" } \r\narray(3) { [0]=> string(3) \"abc\" [1]=> string(3) \"456\" [2]=> string(3) \"123\" }\r\n~~~\r\n\r\n- - -\r\n\r\n## SET操作相关 ##\r\n\r\n`sAdd`：向名称为key的set中添加元素value,如果value存在，不写入，return false\r\n\r\n`$redis->sAdd(key , value)`\r\n\r\n`sRem, sRemove`：删除名称为key的set中的元素value\r\n~~~php\r\n$redis->sAdd(\'key1\' , \'set1\');\r\n$redis->sAdd(\'key1\' , \'set2\');\r\n$redis->sAdd(\'key1\' , \'set3\');\r\n$redis->sRem(\'key1\', \'set2\');\r\n~~~\r\n`sMove`：将value元素从名称为srckey的集合移到名称为dstkey的集合\r\n\r\n`$redis->sMove(seckey, dstkey, value)`\r\n\r\n`sIsMember, sContains`：名称为key的集合中查找是否有value元素，有ture 没有 false\r\n\r\n`$redis->sIsMember(key, value)`\r\n\r\n`sCard, sSize`：返回名称为key的set的元素个数\r\n\r\n`sPop`：随机返回并删除名称为key的set中一个元素\r\n\r\n`sRandMember`：随机返回名称为key的set中一个元素，不删除\r\n\r\n`sInter`：求交集\r\n\r\n`sInterStore`：求交集并将交集保存到output的集合\r\n\r\n`$redis->sInterStore(\'output\', \'key1\', \'key2\', \'key3\')`\r\n\r\n`sUnion`：求并集\r\n\r\n`$redis->sUnion(\'s0\', \'s1\', \'s2\');`\r\n*s0,s1,s2 同时求并集*\r\n\r\n`sUnionStore`：求并集并将并集保存到output的集合\r\n\r\n`$redis->sUnionStore(\'output\', \'key1\', \'key2\', \'key3\')`\r\n\r\n`sDiff`：求差集\r\n\r\n`sDiffStore`：求差集并将差集保存到output的集合\r\n\r\n`sMembers, sGetMembers`：返回名称为key的set的所有元素\r\n\r\n`sort`：排序，分页等\r\n\r\n参数\r\n~~~php\r\n\'by\' => \'some_pattern_*\',\r\n\'limit\' => array(0, 1),\r\n\'get\' => \'some_other_pattern_*\' or an array of patterns,\r\n\'sort\' => \'asc\' or \'desc\',\r\n\'alpha\' => TRUE,\r\n\'store\' => \'external-key\'\r\n~~~\r\n例子：\r\n~~~php\r\n$redis->delete(\'s\'); $redis->sadd(\'s\', 5); $redis->sadd(\'s\', 4); $redis->sadd(\'s\', 2); $redis->sadd(\'s\', 1); $redis->sadd(\'s\', 3);\r\nvar_dump($redis->sort(\'s\')); // 1,2,3,4,5\r\nvar_dump($redis->sort(\'s\', array(\'sort\' => \'desc\'))); // 5,4,3,2,1\r\nvar_dump($redis->sort(\'s\', array(\'sort\' => \'desc\', \'store\' => \'out\'))); // (int)5\r\n ~~~\r\n\r\n**string命令：**\r\n\r\n`getSet`：返回原来key中的值，并将value写入key\r\n~~~php\r\n$redis->set(\'x\', \'42\');\r\n$exValue = $redis->getSet(\'x\', \'lol\'); // return \'42\', replaces x by \'lol\'\r\n$newValue = $redis->get(\'x\')\' // return \'lol\'\r\n~~~\r\n\r\n`append,string`：名称为key的string的值在后面加上value\r\n~~~php\r\n$redis->set(\'key\', \'value1\');\r\n$redis->append(\'key\', \'value2\');\r\n$redis->get(\'key\');\r\n~~~\r\n\r\n`getRange` ：返回名称为key的string中start至end之间的字符\r\n~~~php\r\n$redis->set(\'key\', \'string value\');\r\n$redis->getRange(\'key\', 0, 5);\r\n$redis->getRange(\'key\', -5, -1);\r\n~~~\r\n\r\n`setRange`：改变key的string中start至end之间的字符为value\r\n~~~php\r\n$redis->set(\'key\', \'Hello world\');\r\n$redis->setRange(\'key\', 6, \"redis\");\r\n$redis->get(\'key\');\r\n~~~\r\n\r\n`strlen`：得到key的string的长度\r\n\r\n`$redis->strlen(\'key\')`\r\n\r\n`getBit/setBit`：返回2进制信息\r\n\r\n- - -\r\n## zset（sorted set）操作相关： ##\r\n\r\n`zAdd(key, score, member)`：向名称为key的zset中添加元素member，score用于排序。如果该元素已经存在，则根据score更新该元素的顺序。\r\n~~~php\r\n$redis->zAdd(\'key\', 1, \'val1\');\r\n$redis->zAdd(\'key\', 0, \'val0\');\r\n$redis->zAdd(\'key\', 5, \'val5\');\r\n$redis->zRange(\'key\', 0, -1); // array(val0, val1, val5)\r\n~~~\r\n\r\n`zRange(key, start, end,withscores)`：返回名称为key的zset（元素已按score从小到大排序）中的index从start到end的所有元素\r\n~~~php\r\n$redis->zAdd(\'key1\', 0, \'val0\');\r\n$redis->zAdd(\'key1\', 2, \'val2\');\r\n$redis->zAdd(\'key1\', 10, \'val10\');\r\n$redis->zRange(\'key1\', 0, -1); // with scores $redis->zRange(\'key1\', 0, -1, true);\r\n~~~\r\n\r\n**zDelete, zRem**\r\n\r\n`zRem(key, member) `：删除名称为key的zset中的元素member\r\n~~~php\r\n$redis->zAdd(\'key\', 0, \'val0\');\r\n$redis->zAdd(\'key\', 2, \'val2\');\r\n$redis->zAdd(\'key\', 10, \'val10\');\r\n$redis->zDelete(\'key\', \'val2\');\r\n$redis->zRange(\'key\', 0, -1); \r\n~~~\r\n\r\n`zRevRange(key, start, end,withscores)`：返回名称为key的zset（元素已按score从大到小排序）中的index从start到end的所有元素.withscores: 是否输出socre的值，默认false，不输出\r\n~~~php\r\n$redis->zAdd(\'key\', 0, \'val0\');\r\n$redis->zAdd(\'key\', 2, \'val2\');\r\n$redis->zAdd(\'key\', 10, \'val10\');\r\n$redis->zRevRange(\'key\', 0, -1); // with scores $redis->zRevRange(\'key\', 0, -1, true);\r\n~~~\r\n\r\n**zRangeByScore, zRevRangeByScore**\r\n\r\n`$redis->zRangeByScore(key, star, end, array(withscores， limit )) `：返回名称为key的zset中score >= star且score <= end的所有元素\r\n\r\n`$redis->zCount(key, star, end)`：返回名称为key的zset中score >= star且score <= end的所有元素的个数\r\n\r\n**zRemRangeByScore, zDeleteRangeByScore**\r\n\r\n`$redis->zRemRangeByScore(\'key\', star, end)`：删除名称为key的zset中score >= star且score <= end的所有元素，返回删除个数\r\n\r\n`zSize, zCard`：返回名称为key的zset的所有元素的个数\r\n\r\n`$redis->zScore(key, val2)`：返回名称为key的zset中元素val2的score\r\n\r\n**zRank, zRevRank**\r\n\r\n`$redis->zRevRank(key, val)`：返回名称为key的zset（元素已按score从小到大排序）中val元素的rank（即index，从0开始），若没有val元素，返回“null”。\r\n*zRevRank 是从大到小排序*\r\n\r\n`$redis->zIncrBy(\'key\', increment, \'member\')`：如果在名称为key的zset中已经存在元素member，则该元素的score增加increment；否则向集合中添加该元素，其score的值为increment\r\n\r\n**zUnion/zInter**\r\n\r\n参数：keyOutput、arrayZSetKeys、arrayWeights、aggregateFunction Either \"SUM\", \"MIN\", or \"MAX\": defines the behaviour to use on duplicate entries during the zUnion.\r\n\r\n对N个zset求并集和交集，并将最后的集合保存在dstkeyN中。对于集合中每一个元素的score，在进行AGGREGATE运算前，都要乘以对于的WEIGHT参数。如果没有提供WEIGHT，默认为1。默认的AGGREGATE是SUM，即结果集合中元素的score是所有集合对应元素进行SUM运算的值，而MIN和MAX是指，结果集合中元素的score是所有集合对应元素中最小值和最大值。\r\n\r\n- - -\r\n## Hash操作 ##\r\n\r\n`$redis->hSet(\'h\', \'key1\', \'hello\')`：向名称为h的hash中添加元素key1—>hello\r\n\r\n`$redis->hGet(\'h\', \'key1\')`：返回名称为h的hash中key1对应的value（hello）\r\n\r\n`$redis->hLen(\'h\')`：返回名称为h的hash中元素个数\r\n\r\n`$redis->hDel(\'h\', \'key1\')`：删除名称为h的hash中键为key1的域\r\n\r\n`$redis->hKeys(\'h\')`：返回名称为key的hash中所有键\r\n\r\n`$redis->hVals(\'h\')`：返回名称为h的hash中所有键对应的value\r\n\r\n`$redis->hGetAll(\'h\')`：返回名称为h的hash中所有的键（field）及其对应的value\r\n\r\n`$redis->hExists(\'h\', \'a\')`：名称为h的hash中是否存在键名字为a的域\r\n\r\n`$redis->hIncrBy(\'h\', \'x\', 2)`：将名称为h的hash中x的value增加2\r\n\r\n`$redis->hMset(\'user:1\', array(\'name\' => \'Joe\', \'salary\' => 2000))`：向名称为key的hash中批量添加元素\r\n\r\n`$redis->hmGet(\'h\', array(\'field1\', \'field2\'))`：返回名称为h的hash中field1,field2对应的value\r\n\r\n- - -\r\n## redis 操作相关 ##\r\n\r\n`flushDB`：清空当前数据库\r\n\r\n`flushAll`：清空所有数据库\r\n\r\n`randomKey`：随机返回key空间的一个key\r\n\r\n`$key = $redis->randomKey()`\r\n\r\n`select`：选择一个数据库\r\n\r\n`move`：转移一个key到另外一个数据库\r\n~~~php\r\n$redis->select(0); // switch to DB 0\r\n$redis->set(\'x\', \'42\'); // write 42 to x\r\n$redis->move(\'x\', 1); // move to DB 1\r\n$redis->select(1); // switch to DB 1\r\n$redis->get(\'x\'); // will return 42\r\n~~~\r\n\r\n`rename, renameKey`：给key重命名\r\n~~~php\r\n$redis->set(\'x\', \'42\');\r\n$redis->rename(\'x\', \'y\');\r\n$redis->get(\'y\'); // → 42\r\n$redis->get(\'x\'); // → `FALSE`\r\n~~~\r\n\r\n`renameNx`：与remane类似，但是，如果重新命名的名字已经存在，不会替换成功\r\n\r\n`setTimeout, expire`：设定一个key的活动时间（s）\r\n\r\n`$redis->setTimeout(\'x\', 3)`\r\n\r\n`expireAt`：key存活到一个unix时间戳时间\r\n\r\n`$redis->expireAt(\'x\', time() + 3)`\r\n\r\n`keys, getKeys`：返回满足给定pattern的所有key\r\n\r\n`$keyWithUserPrefix = $redis->keys(\'user*\')`\r\n\r\n`dbSize`：查看现在数据库有多少key\r\n\r\n`$count = $redis->dbSize()`\r\n\r\n`auth`：密码认证\r\n\r\n`$redis->auth(\'foobared\')`\r\n\r\n`bgrewriteaof`：使用aof来进行数据库持久化\r\n\r\n`$redis->bgrewriteaof()`\r\n\r\n`slaveof`：选择从服务器\r\n\r\n`$redis->slaveof(\'10.0.1.7\', 6379)`\r\n\r\n`save`：将数据同步保存到磁盘\r\n\r\n`bgsave`：将数据异步保存到磁盘\r\n\r\n`lastSave`：返回上次成功将数据保存到磁盘的Unix时戳\r\n\r\n`info`：返回redis的版本信息等详情\r\n\r\n`type`：返回key的类型值\r\n~~~php\r\nstring: Redis::REDIS_STRING\r\nset: Redis::REDIS_SET\r\nlist: Redis::REDIS_LIST\r\nzset: Redis::REDIS_ZSET\r\nhash: Redis::REDIS_HASH\r\nother: Redis::REDIS_NOT_FOUND\r\n~~~',0,1,1505913528,1505916555),(15,'Yii 知识点',1,4,NULL,'## 行为 ##\r\n\r\n**要定义行为，通过继承 yii\\base\\Behavior 或其子类来建立一个类。**\r\n\r\n**类要使用Behaviors行为注入的Behaviors类的属性和方法，必需要继承yii\\base\\Component**\r\n~~~php\r\npublic function behaviors() {\r\n    return [\r\n        \'class\' => Behavior::className(),\r\n    ];\r\n}\r\n~~~\r\n或者\r\n~~~php\r\n$A = new A();\r\n$behavior = new Behavior();\r\n\r\n$A->attachBehavior(\'name\', $behavior); //  添加行为\r\n$A->detachBehavior(\'name\');  //  移除行为\r\n~~~\r\n\r\n### 例子： ###\r\n~~~php\r\n public function behaviors()\r\n {\r\n    return [\r\n        [\r\n            \'class\' => TimestampBehavior::className(),\r\n            \'attributes\' => [\r\n                ActiveRecord::EVENT_BEFORE_INSERT => [\'created_at\', \'updated_at\'],\r\n                ActiveRecord::EVENT_BEFORE_UPDATE => [\'updated_at\'],\r\n            ],\r\n            // if you\'re using datetime instead of UNIX timestamp:\r\n            // \'value\' => new Expression(\'NOW()\'),\r\n        ],\r\n    ];\r\n }\r\n~~~\r\n\r\n        从实现的效果看，你是不是会认为Yii真是多此一举？PHP中要达到这样的效果，可以使用继承呀，可以使用PHP新引入的特性（Traits）呀。但是，行为具有继承和特性所没有的优点，从实际使用的角度讲，继承和特性更靠底层点。靠底层，就意味着开发效率低，运行效率高。行为的引入，是以可以接受的运行效率牺牲为成本，谋取开发效率大提升的一笔买卖。\r\n\r\n**行为与继承**\r\n\r\n        首先来讲，拿行为与继承比较，从逻辑上是不对的，这两者是在完全不同的层面上的事物，是不对等的。之所以进行比较，是因为在实现的效果上，两者有的类似的地方。看起来，行为和继承都可以使一个类具有另一个类的属性和方法，从而达到扩充类的功能的目的。\r\n        相比较于使用继承的方式来扩充类功能，使用行为的方式，一是不必对现有类进行修改，二是PHP不支持多继承，但是Yii可以绑定多个行为，从而达到类似多继承的效果。\r\n        反过来，行为是绝对无法替代继承的。亚洲人，美洲人都是地球人，你可以将亚洲人和美洲人当成地球人来对待。但是，你绝对不能把一只在某些方面表现得像人的猴子，真的当成人来对待。\r\n        这里就不展开讲了。从本质上来讲，行为只是一种设计模式，是解决问题的方法学。继承则是PHP作为编程语言所提供的特性，根本不在一个层次上。\r\n\r\n**行为与特性**\r\n\r\n        特性是PHP5.4之后引入的一个新feature。从实现效果看，行为与特性都达到把自身的public 变量、属性、方法注入到当前类中去的目的。在使用上，他们也各有所长，但总的原则可以按下面的提示进行把握。\r\n\r\n        倾向于使用行为的情况：\r\n\r\n        行为从本质上讲，也是PHP的类，因此一个行为可以继承自另一个行为，从而实现代码的复用。而特性只是PHP的一种语法，效果上类似于把特性的代码导入到了类中从而实现代码的注入，特性是不支持继承的。\r\n        行为可以动态地绑定、解除，而不必要对类进行修改。但是特性必须在类在使用 use 语句，要解除特性时，则要删除这个语句。换句话说，需要对类进行修改。\r\n        行为还以在在配置阶段进行绑定，特性就不行了。\r\n        行为可以用于对事件进行反馈，而特性不行。\r\n        当出现命名冲突时，行为会自行排除冲突，自动使用先绑定的行为。而特性在发生冲突时，需要人为干预，修改发生冲突的变量名、属性名、方法名。\r\n\r\n        倾向于使用特性的情况：\r\n\r\n        特性比行为在效率上要高一点，因为行为其实是类的实例，需要时间和空间进行分配。\r\n        特性是PHP的语法，因此，IDE的支持要好一些。目前还没有IDE能支持行为。',0,1,1505917236,1505917515);
/*!40000 ALTER TABLE `learning` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `life`
--

DROP TABLE IF EXISTS `life`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `life` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(60) NOT NULL COMMENT '标题',
  `uid` int(11) NOT NULL COMMENT '作者',
  `cid` int(11) NOT NULL COMMENT '分类',
  `cover` varchar(255) DEFAULT NULL COMMENT '封面',
  `content` text NOT NULL COMMENT '内容',
  `remend` int(11) NOT NULL DEFAULT '0' COMMENT '推荐',
  `status` int(11) NOT NULL DEFAULT '1' COMMENT '状态',
  `created_at` int(11) NOT NULL COMMENT '创建时间',
  `updated_at` int(11) NOT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COMMENT='生活';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `life`
--

LOCK TABLES `life` WRITE;
/*!40000 ALTER TABLE `life` DISABLE KEYS */;
INSERT INTO `life` VALUES (1,'南山忆',1,6,'/uploads/cover/59c1f5e196545_vae.jpg','<p style=\"text-align: center;\"><img src=\"/uploads/ueditor/images/20170920/150588396379592895.jpg\" title=\"150588396379592895.jpg\" alt=\"南山忆.jpg\"/></p><p><br/></p><p style=\"text-align: center;\">乘一叶扁舟 入景随风望江畔渔火</p><p style=\"text-align: center;\">转竹林深处 残碑小筑僧侣始复诵</p><p style=\"text-align: center;\">苇岸红亭中 抖抖绿蓑邀南山对酌</p><p style=\"text-align: center;\">纸钱晚风送 谁家又添新痛</p><p style=\"text-align: center;\">独揽月下萤火 照亮一纸寂寞</p><p style=\"text-align: center;\">追忆那些什么 你说的爱我</p><p style=\"text-align: center;\">花开后花又落 轮回也没结果</p><p style=\"text-align: center;\">苔上雪告诉我 你没归来过</p><p style=\"text-align: center;\">遥想多年前 烟花满天 你静静抱着我</p><p style=\"text-align: center;\">丝竹声悠悠 教人忘忧 若南柯一梦</p><p style=\"text-align: center;\">星斗青光透 时无英雄 心猿已深锁</p><p style=\"text-align: center;\">可你辞世后 我再也没笑过</p><p style=\"text-align: center;\">独揽月下萤火 照亮一纸寂寞</p><p style=\"text-align: center;\">追忆那些什么 你说的爱我</p><p style=\"text-align: center;\">花开后花又落 轮回也没结果</p><p style=\"text-align: center;\">苔上雪告诉我 你没归来过独揽月下萤火</p><p style=\"text-align: center;\">照亮一纸寂寞</p><p style=\"text-align: center;\">追忆那些什么 你说的爱我</p><p style=\"text-align: center;\">花开后花又落 轮回也没结果</p><p style=\"text-align: center;\">苔上雪告诉我 你没归来过</p><p style=\"text-align: center;\">花开后花又落 轮回也没结果</p><p style=\"text-align: center;\">苔上雪告诉我 你没归来过.</p><p><br/></p>',0,1,1504777005,1505883966);
/*!40000 ALTER TABLE `life` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `menu`
--

DROP TABLE IF EXISTS `menu`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `menu` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `parent_id` int(11) NOT NULL DEFAULT '0',
  `name` varchar(45) NOT NULL COMMENT '标题',
  `url` varchar(45) NOT NULL COMMENT '路由',
  `icon` varchar(45) DEFAULT 'fa fa-th-list',
  `type` int(11) NOT NULL DEFAULT '0' COMMENT '类型',
  `status` int(11) NOT NULL DEFAULT '1' COMMENT '状态',
  `created_at` int(11) NOT NULL COMMENT '创建时间',
  `updated_at` int(11) NOT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=101 DEFAULT CHARSET=utf8mb4 COMMENT='菜单';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `menu`
--

LOCK TABLES `menu` WRITE;
/*!40000 ALTER TABLE `menu` DISABLE KEYS */;
INSERT INTO `menu` VALUES (1,0,'菜单','menu/index','fa fa-th-list',0,1,1504664227,1504766018),(2,0,'生活','life/index','fa fa-coffee',0,1,1504664227,1504664227),(3,0,'学习','learning/index','fa fa-book',0,1,1504664227,1504664227),(4,3,'PHP','learning/index?c=PHP','fa fa-th-list',0,1,1504664227,1504747575),(5,3,'Linux','learning/index?c=linux','',0,1,1504694559,1504747583),(6,2,'Music','life/index?c=Music','',0,1,1504767036,1504863353),(7,2,'Movie','life/index?c=Movie','',0,1,1504767076,1504863361),(8,3,'Js','learning/index?c=js','',0,1,1505095527,1505095527),(9,3,'SQL','/learning/index?c=SQL','',0,1,1505897610,1505897610),(100,3,'其它','/learning/index?c=其它','',0,1,1505895932,1505895932);
/*!40000 ALTER TABLE `menu` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2017-09-20 22:33:21
